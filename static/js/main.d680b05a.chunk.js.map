{"version":3,"sources":["tileData.js","apiUtils.js","Button.js","IntroCard.js","Expansion.js","NavBar.js","index.js"],"names":["tileData","cols","randomWords","require","request","XMLHttpRequest","tileDatas","search","exactly","wordsPerString","styles","root","display","flexWrap","justifyContent","overflow","height","gridList","gridListTile","width","direction","justify","alignItems","position","gridListTitleMobile","ustifyContent","iframe","resizeMode","displayGIFNicely","apiData","apiResponseData","JSON","parse","Array","fill","map","_","i","concat","data","embed_url","GIF_api","window","location","reload","GifGrid","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","self","onreadystatechange","e","readyState","status","setState","responseText","open","send","keys","length","react_default","a","createElement","style","react_responsive_default","minDeviceWidth","GridList_default","cellHeight","tile","GridListTile_default","key","img","spacing","src","title","frameBorder","allowFullScreen","maxDeviceWidth","paddingTop","Component","GifButton","Button_default","size","onClick","withStyles","card","minWidth","maxWidth","minHeight","margin","marginTop","flex","flexDirection","bullet","transform","fontSize","query","textTransform","padding","pos","marginBottom","p","lineHeight","classes","bull","className","splitSearchQuery","split","filter","Card_default","CardContent_default","Typography_default","color","gutterBottom","id","variant","component","CardActions_default","src_Button","ControlledExpansionPanels","expanded","handleChange","panel","event","ExpansionPanel_default","onChange","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","secondaryHeading","ExpansionPanelDetails_default","React","theme","typography","pxToRem","flexBasis","flexShrink","palette","text","secondary","flexGrow","app","&:hover","backgroundColor","fade","grow","navIcon","marginLeft","marginRight","GifNavBar","auth","anchorEl","target","checked","handleMenu","currentTarget","handleCloseSource","handleCloseAbout","handleCloseGiphy","handleClose","_this$state","Boolean","AppBar_default","Toolbar_default","IconButton_default","aria-label","FilterVintage_default","aria-owns","aria-haspopup","Code_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","ReactDOM","render","NavBar","document","getElementById","apiUtils","src_IntroCard","Expansion"],"mappings":"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","file":"static/js/main.d680b05a.chunk.js","sourcesContent":["const tileData = [\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    {\n        cols: 1,\n    },\n    ];\n\n    export default tileData","import React, { Component } from 'react';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport MediaQuery from 'react-responsive'\n\nimport tileData from './tileData'\n\nlet randomWords = require('random-words');\nlet request = new XMLHttpRequest();\n\nvar tileDatas = tileData\nexport const search = randomWords({exactly:1, wordsPerString:2});\n\nconst styles = {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'scroll',\n      height: '100%'\n    },\n    gridList: {\n      height: '100%',\n    },\n    gridListTile: {\n        height: '20%',\n        width: '33%',\n        justifyContent: 'center',\n        direction: 'row',\n        justify: 'center',\n        alignItems: 'flex-start',\n        position: 'relative',\n    },\n    gridListTitleMobile: {\n        height: '150px',\n        width: '100%',\n        ustifyContent: 'center',\n        direction: 'row',\n        justify: 'center',\n        alignItems: 'flex-start',\n        position: 'relative',\n    },\n    iframe: {\n        position: 'relative', \n        height: '100%',\n        width: '100%',\n        resizeMode: 'stretch',\n    }\n  };\n\nfunction displayGIFNicely(apiData) {\n    let apiResponseData = JSON.parse(apiData);\n\n    // Map through tileDatas array to populate Image in tileDatas object\n    Array(24).fill().map((_,i) => \n        tileDatas[i]['img'] = `${apiResponseData.data[i].embed_url}`,\n    )\n    return tileDatas\n}\n\n\nclass GifGrid extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          tileDatas: []\n        }\n    }\n\n    // Fetch API data after all other components are loaded\n    componentDidMount() {\n    var self = this;\n\n        request.onreadystatechange = function(e){\n            if (this.readyState === 4 && this.status === 200) {\n                self.setState({\n                tileData : displayGIFNicely(this.responseText)\n                });\n            }\n            else if (this.readyState === 4 && this.status === 404) {\n            }\n        }\n\n    // Send search request to API with random search words\n    request.open(\"GET\", \"https://giveagif.herokuapp.com/gifs/\" + search);\n    request.send();\n\n    }\n\n    // Render Gif Grid with Gif from API response\n    render() {\n        let tileDataLoaded = Object.keys(tileData[1]).length > 0;\n        return(\n            tileDataLoaded ?\n            <div style={styles.root}>\n            <MediaQuery minDeviceWidth={1024}>\n                <GridList style={styles.gridList} cellHeight={150} cols={3}>\n                    {tileData.map(tile => (\n                    <GridListTile key={tile.img} style={styles.gridListTile} cols={tile.cols || 1} spacing={1}>\n                        <iframe src={tile.img} style={styles.iframe} title='gif' frameBorder='0' allowFullScreen></iframe>\n                    </GridListTile>\n                    ))}\n                </GridList>\n                </MediaQuery>\n                {/* Use Media query if smaller size screen */}\n                <MediaQuery minDeviceWidth={320} maxDeviceWidth={1023}>\n                <GridList style={styles.gridList} cellHeight={90} cols={1} paddingTop='10px'>\n                    {tileData.map(tile => (\n                    <GridListTile key={tile.img} style={styles.gridListTitleMobile} cols={tile.cols || 1}>\n                        <iframe src={tile.img} style={styles.iframe} title='gif' height='180%' frameBorder='0' allowFullScreen></iframe>\n                    </GridListTile>\n                    ))}\n                </GridList>\n                </MediaQuery>\n            </div>\n            :\n            <div>Your Gifs Are Loading...</div>\n        );\n    }\n  }\n\n\n// Reload page on function call to call API\nexport function GIF_api() {\n    window.location.reload(); \n    return false;\n}\n\nexport default GifGrid\n","import React, { Component } from 'react';\nimport { GIF_api } from './apiUtils'\nimport Button from '@material-ui/core/Button';\n\nclass GifButton extends Component {\n    render () {\n        return (\n            <Button size=\"small\" onClick={GIF_api} >Show Me the GIFs!</Button>\n        );\n    }\n}\n\nexport default GifButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport GifButton from './Button'\nimport { search } from './apiUtils'\n\nconst styles = {\n  card: {\n    minWidth: 250,\n    maxWidth: 450,\n    minHeight: 250,\n    margin: '0 auto',\n    marginTop: '18%',\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    display: 'inline-block',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 5px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  query: {\n    textTransform: 'capitalize',\n    padding: 5,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  p: {\n    fontSize: 18,\n    lineHeight: 1.5,\n}\n};\n\n\nfunction IntroCard(props) {\n  const { classes } = props;\n  const bull = <span className={classes.bullet}>•</span>;\n  // Split the words searching for the gifs so they can be easily read\n  const splitSearchQuery = search[0].split(/(\\s+)/).filter(e => e.length > 1)\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom id=\"search-query\">\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\" className={classes.query}>\n          {splitSearchQuery[0]}\n          {bull}\n          {splitSearchQuery[1]}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n            Click \"Show Me the Gifs\" to search again\n        </Typography>\n        <Typography className={classes.p} component=\"p\">\n          <br />\n          {'GIFs were searched for using these two words provided by a random word generator. Click on any GIF to see more GIFs like it.'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <GifButton></GifButton>\n      </CardActions>\n    </Card>\n  );\n}\n\nIntroCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntroCard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst styles = theme => ({\n  root: {\n    minWidth: 250,\n    maxWidth: 450,\n    marginTop: '10%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n});\n\nclass ControlledExpansionPanels extends React.Component {\n  state = {\n    expanded: null,\n  };\n\n  handleChange = panel => (event, expanded) => {\n    this.setState({\n      expanded: expanded ? panel : false,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { expanded } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <ExpansionPanel expanded={expanded === 'panel1'} onChange={this.handleChange('panel1')}>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>Help!</Typography>\n            <Typography className={classes.secondaryHeading}>The GIFs aren't loading!</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography>\n              The GIFs can take a bit longer due to your internet connection or because the 'Show Me the GIFs' button has been pressed too many times. Wait a few moments, and try again.\n            </Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nControlledExpansionPanels.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ControlledExpansionPanels);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport IconButton from '@material-ui/core/IconButton';\nimport FilterVintage from '@material-ui/icons/FilterVintage';\nimport Code from '@material-ui/icons/Code';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  app : {\n    '&:hover': {\n      backgroundColor: fade('#3f51b5', 0.90),\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  navIcon: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\n// Include all links in navbar\nclass GifNavBar extends React.Component {\n    state = {\n      auth: true,\n      anchorEl: null,\n    };\n  \n    handleChange = event => {\n      this.setState({ auth: event.target.checked });\n    };\n  \n    handleMenu = event => {\n      this.setState({ anchorEl: event.currentTarget });\n    };\n  \n    handleCloseSource = () => {\n      window.open('https://github.com/hschafer2017/Give-A-GIF', '_blank');\n      this.setState({ anchorEl: null });\n    };\n\n    handleCloseAbout = () => {\n        window.open('https://github.com/hschafer2017/Give-A-GIF/blob/master/README.md', '_blank');\n        this.setState({ anchorEl: null });\n    };\n    \n    handleCloseGiphy = () => {\n        window.open('https://developers.giphy.com/docs/', '_blank');\n        this.setState({ anchorEl: null });\n    };\n    \n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n\nrender() {\n  const { classes } = this.props;\n  const { auth, anchorEl } = this.state;\n  const open = Boolean(anchorEl);\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.app}>\n        <Toolbar>\n        <IconButton className={classes.navIcon} color=\"inherit\" aria-label=\"Menu\">\n            <FilterVintage />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            Give A Gif\n          </Typography>\n          {auth && (\n              <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : null}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Code />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                <MenuItem onClick={this.handleCloseSource}>\n                Source Code</MenuItem>\n                <MenuItem onClick={this.handleCloseAbout}>About Project</MenuItem>\n                <MenuItem onClick={this.handleCloseGiphy} >Giphy API</MenuItem>\n                </Menu>\n              </div>\n            )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n}\n\nGifNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GifNavBar);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport GifGrid from './apiUtils.js'\nimport IntroCard from './IntroCard.js'\nimport ControlledExpansionPanels from './Expansion.js'\nimport GifNavBar from './NavBar.js'\n\n\nReactDOM.render(<GifNavBar/>, document.getElementById('navbar'));\nReactDOM.render(<GifGrid />, document.getElementById('gif-images'));\nReactDOM.render(<IntroCard />, document.getElementById('query-card'));\nReactDOM.render(<ControlledExpansionPanels/>, document.getElementById('help-panel'));\n"],"sourceRoot":""}